@page "/"
@using AspireApp.WebApp.Database
@using AspireApp.WebApp.Services
@rendermode InteractiveServer
@inject TodoService TodoService

<PageTitle>To Do List</PageTitle>

<h1 class="mb-3">To Do List</h1>

@if (_todoList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Title</th>
            <th>Complete</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var todo in _todoList)
        {
            <tr>
                <td><p>@todo.Title</p></td>
                <td>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" @bind="todo.IsCompleted" @bind:after="() => UpdateComplete(todo)"/>
                    </div>
                </td>
                <td>
                    <button class="btn btn-danger btn-sm" @onclick="() => Delete(todo)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <form class="mt-3" @onsubmit="AddTodo">
            <input type="text" placeholder="Something todo" @bind="_newTodo" />
            <button type="submit" class="btn btn-primary">Submit</button>
    </form>
}

@code {
    private TodoItem[]? _todoList;
    private string? _newTodo;

    private async Task UpdateComplete(TodoItem todoItem)
    {
        await TodoService.UpdateIsComplete(todoItem.Id, todoItem.IsCompleted);
    }

    private async Task GetItems()
    {
        _todoList = (await TodoService.GetAll())?.OrderBy(t => t.CreatedAt).ToArray() ?? [];

    }
    private async Task Delete(TodoItem todoItem)
    {
        await TodoService.Delete(todoItem.Id);
        await GetItems();
    }

    protected override async Task OnInitializedAsync()
    {
        await GetItems();
    }
    
    private async Task AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(_newTodo))
        {
            await TodoService.Add(_newTodo);
            _newTodo = string.Empty;
            await GetItems();
        }
    }
}
